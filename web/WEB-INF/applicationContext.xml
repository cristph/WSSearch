<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.1.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd">

    <context:component-scan base-package="com.wssearch" />

    <!--<aop:aspectj-autoproxy />-->

    <mvc:annotation-driven />

    <!--<aop:config>-->
        <!--<aop:pointcut id="serviceMethods" expression="execution(* com.dessert.service..*.*(..))" />-->
        <!--<aop:advisor advice-ref="txadvice" pointcut-ref="serviceMethods" />-->
    <!--</aop:config>-->

    <!--<tx:advice id="txadvice" transaction-manager="transactionManager">-->
        <!--<tx:attributes>-->
            <!--<tx:method name="add*" propagation="REQUIRED" />-->
            <!--<tx:method name="save*" propagation="REQUIRED" />-->
            <!--<tx:method name="update*" propagation="REQUIRED" />-->
            <!--<tx:method name="delete*" propagation="REQUIRED" />-->
            <!--<tx:method name="get*" read-only="true" propagation="SUPPORTS" />-->
            <!--<tx:method name="find*" read-only="true" propagation="SUPPORTS" />-->
            <!--<tx:method name="*" read-only="true" />-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->

    <!-- Resolve logical view names to .jsp resources in the /WEB-INF/views directory -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />



    <!--Load database config-->
    <bean id="mappings" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:config.properties"/>
    </bean>

    <bean id="dataSourceOne" class="com.mchange.v2.c3p0.ComboPooledDataSource"
                 destroy-method="close">
    <property name="driverClass" value="${driverClassName}"/>
    <property name="jdbcUrl" value="${jdbc_url}"/>
    <property name="user" value="${jdbc_username}"/>
    <property name="password" value="${jdbc_password}"/>
    </bean>

    <!--<bean id="dataSourceTwo" class="com.mchange.v2.c3p0.ComboPooledDataSource"-->
          <!--destroy-method="close">-->
        <!--<property name="driverClass" value="${driverClassName2}"/>-->
        <!--<property name="jdbcUrl" value="${jdbc_url2}"/>-->
        <!--<property name="user" value="${jdbc_username2}"/>-->
        <!--<property name="password" value="${jdbc_password2}"/>-->
    <!--</bean>-->

    <!--<bean id="dataSource" class="com.dessert.util.DynamicDataSource">-->
        <!--<property name="targetDataSources">-->
            <!--<map key-type="java.lang.String">-->
                <!--<entry key="dataSourceOne" value-ref="dataSourceOne" />-->
                <!--<entry key="dataSourceTwo" value-ref="dataSourceTwo" />-->
            <!--</map>-->
        <!--</property>-->
        <!--<property name="defaultTargetDataSource" ref="dataSourceOne" />-->
    <!--</bean>-->

    <!-- 定义Hibernate的SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <!-- 依赖注入数据源，注入正是上面定义的dataSource -->
        <property name="packagesToScan" value="com.wssearch.model"/>
        <property name="dataSource" ref="dataSourceOne"/>
        <!-- 定义Hibernate的SessionFactory的属性 -->
        <property name="hibernateProperties">
            <props>
                <!-- 指定数据库方言 -->
                <prop key="hibernate.dialect">org.hibernate.dialect.SybaseASE15Dialect</prop>
                <!-- 是否根据需要每次自动创建数据库 -->
                <!--<prop key="hibernate.hbm2ddl.auto">update</prop>-->
                <!-- 显示Hibernate持久化操作所生成的SQL -->
                <prop key="hibernate.show_sql">true</prop>
                <!-- 将SQL脚本进行格式化后再输出 -->
                <prop key="hibernate.format_sql">true</prop>
            </props>
        </property>
    </bean>

    <!-- 配置Hibernate的局部事务管理器，使用HibernateTransactionManager类 -->
    <!-- 该类实现PlatformTransactionManager接口，是针对Hibernate的特定实现-->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <!-- 配置HibernateTransactionManager时需要依注入SessionFactory的引用 -->
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <tx:annotation-driven/>


    <!--<bean id="dataSourceInterceptor" class="com.dessert.util.DataSourceInterceptor" />-->

    <!--<aop:config>-->
        <!--<aop:aspect id="dataSourceAspect" ref="dataSourceInterceptor">-->
            <!--<aop:pointcut id="dsMysql" expression="execution(* com.dessert.controller.*.*(..))" />-->
            <!--<aop:pointcut id="dsOracle" expression="execution(* com.controller.oracle.*.*(..))" />-->
            <!--<aop:before method="setdataSourceMysql" pointcut-ref="dsMysql"/>-->
            <!--<aop:before method="setdataSourceOracle" pointcut-ref="dsOracle"/>-->
        <!--</aop:aspect>-->
    <!--</aop:config>-->
</beans>